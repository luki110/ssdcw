@model ssdcw.Models.ViewModels.TicketWithCommentsVM

@{
    ViewData["Title"] = "Details";
}


@if (ViewData["Error"] != null)
{

    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error</strong> @ViewData["Error"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<h1>Details</h1>

<div>
    <h4>Ticket</h4>
    <hr />
    <div>
        <a type="button" class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.ticket.Id">Change status</a>
        <br />
        <a type="button" class="btn btn-info" asp-action="Index">Back to List</a>
    </div>
 
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ticket.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.DateCreated)
        </dd>
        <dt class="col-sm-2">
            Submitted By
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.Author.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ticket.TicketStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.TicketStatus)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ticket.TicketType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.TicketType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ticket.TicketPriority)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.TicketPriority)
        </dd>
        <dt class="col-sm-2">
            Assigned To
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.UserAssigned.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ticket.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ticket.Description)
        </dd>
    </dl>
</div>



@if (Model.ticket.TicketStatus.ToString() != "Closed")
{
    <div class="row">
        @await Html.PartialAsync("_AddComment", new Comment() { TicketId = Model.ticket.Id })
    </div>
}
else
{
    <p>Posting comments is not available for closed tickets</p>
}




<br>
@await Html.PartialAsync("_CommentsPartial", Model.ticket.Comments)
